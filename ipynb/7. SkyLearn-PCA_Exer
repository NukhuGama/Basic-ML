{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPzLlzvWudJ1VG+y1w9+u5S"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#**Latihan SKLearn PCA**"],"metadata":{"id":"Kju3FzXR2Xum"}},{"cell_type":"markdown","source":["#**Tujuan**\n","######Pada latihan ini, kita akan berlatih mengimplementasi PCA dengan library SKLearn."],"metadata":{"id":"cx-Xy6qlsx5z"}},{"cell_type":"markdown","source":["#**Tahapan Latihan**\n","#####Tahapan pada latihan ini sebagai berikut:\n","\n","\n","* Bagi dataset.\n","* Latih model tanpa PCA.\n","* Latih model dengan PCA.\n","* Evaluasi hasil kedua model.\n","\n","\n","\n"],"metadata":{"id":"MqOKv0n0s7EM"}},{"cell_type":"markdown","source":["#**Codelab**\n","#####Pada Colaboratory impor library yang dibutuhkan.  Kemudian kita masukkan dataset iris dan bagi data menjadi train set dan test set."],"metadata":{"id":"f7ffkp-ktPBz"}},{"cell_type":"code","source":["from sklearn import datasets\n","from sklearn.model_selection import train_test_split\n","\n","#Pada Latihan ini kita menggunakan iris dataset\n","iris = datasets.load_iris()\n","atribut = iris.data\n","label = iris.target\n","\n","#Bagi dataset manjasi train set dan test set\n","X_train, X_test, y_train, y_test = train_test_split(\n","    atribut, label, test_size=0.2, random_state=1\n",")\n","\n"],"metadata":{"id":"VoU8Iqh8tYEh","executionInfo":{"status":"ok","timestamp":1717294956558,"user_tz":-540,"elapsed":601,"user":{"displayName":"Simiao S. da Gama","userId":"06472595293076983850"}}},"execution_count":14,"outputs":[]},{"cell_type":"markdown","source":["#####Kita akan menggunakan model Decision Tree dan menghitung berapa akurasinya tanpa menggunakan PCA. Akurasi tanpa PCA adalah 0.9666. Akurasi dari model Anda mungkin berbeda dengan keluaran di bawah."],"metadata":{"id":"4rs1aELAuNWr"}},{"cell_type":"code","source":["from sklearn import tree\n","\n","decision_tree = tree.DecisionTreeClassifier()\n","first_model = decision_tree.fit(X_train, y_train)\n","first_model.score(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4w93hLNeuR5y","executionInfo":{"status":"ok","timestamp":1717294956558,"user_tz":-540,"elapsed":6,"user":{"displayName":"Simiao S. da Gama","userId":"06472595293076983850"}},"outputId":"f44af34a-9943-423b-ef4b-82b976ddf8f7"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9666666666666667"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["#####Kemudian kita akan menggunakan PCA dan menghitung variance dari setiap atribut. Hasilnya adalah 1 atribut memiliki variance sebesar 0.922, yang berarti atribut tersebut menyimpan informasi yang tinggi dan jauh lebih signifikan dari atribut lain."],"metadata":{"id":"zADLxfLlu7Yi"}},{"cell_type":"code","source":["from sklearn.decomposition import PCA\n","\n","#membuat objek PCA dengan 4 principal component\n","pca = PCA(n_components=4)\n","\n","#mengaplikasikan PCA pada dataset\n","pca_attributes = pca.fit_transform(X_train)\n","\n","#melihat variance dari setiap atribut\n","pca.explained_variance_ratio_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8sW8wbrku8tD","executionInfo":{"status":"ok","timestamp":1717295321386,"user_tz":-540,"elapsed":12,"user":{"displayName":"Simiao S. da Gama","userId":"06472595293076983850"}},"outputId":"fe36ac2e-a40e-4e64-f781-a4303f0dbd7f"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.92848323, 0.04764372, 0.01931005, 0.004563  ])"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["#####Melihat dari variance sebelumnya kita bisa mengambil 2 principal component terbaik karena total variance nya adalah 0.976 yang sudah cukup tinggi.\n"],"metadata":{"id":"jpz9Q3E0vnYs"}},{"cell_type":"code","source":["# PCA dengan 2 principal component\n","\n","pca = PCA(n_components=2)\n","X_train_pca = pca.fit_transform(X_train)\n","X_test_pca = pca.fit_transform(X_test)\n"],"metadata":{"id":"24qP6YAdvpwp","executionInfo":{"status":"ok","timestamp":1717294960529,"user_tz":-540,"elapsed":6,"user":{"displayName":"Simiao S. da Gama","userId":"06472595293076983850"}}},"execution_count":17,"outputs":[]},{"cell_type":"markdown","source":["######Kita akan menguji akurasi dari classifier setelah menggunakan PCA."],"metadata":{"id":"89lqhiIxwbdD"}},{"cell_type":"code","source":["# uji akurasi classifier\n","model2 = decision_tree.fit(X_train_pca, y_train)\n","print(\"Hasil pengujian akurasi setelah menggunakan PCA menjadi seperti di bawah ini:\")\n","model2.score(X_test_pca, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"neaL7FF2wdLX","executionInfo":{"status":"ok","timestamp":1717295395281,"user_tz":-540,"elapsed":590,"user":{"displayName":"Simiao S. da Gama","userId":"06472595293076983850"}},"outputId":"a2094ced-381b-4d3b-de5f-897338c2febc"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["Hasil pengujian akurasi setelah menggunakan PCA menjadi seperti di bawah ini:\n"]},{"output_type":"execute_result","data":{"text/plain":["0.9333333333333333"]},"metadata":{},"execution_count":25}]},{"cell_type":"markdown","source":["#####Dari percobaan di atas bisa kita lihat bahwa dengan hanya 2 principal component atau 2 atribut saja model masih memiliki akurasi yang tinggi. Dengan principal component kamu bisa mengurangi atribut yang kurang signifikan dalam prediksi dan mempercepat waktu pelatihan sebuah model machine learning."],"metadata":{"id":"kW4rVYg6w7VM"}}]}