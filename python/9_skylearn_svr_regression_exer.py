# -*- coding: utf-8 -*-
# """9. SkyLearn-SVR_Regression_Exer

# Automatically generated by Colab.

# Original file is located at
#     https://colab.research.google.com/drive/1kCKljnIjkLwYlUyIksPvm6uO6CDSCWKE

# #**Latihan SKLearn SVR**

# #**Tujuan**
# ######Setelah mengenal support vector regression, kita akan belajar menerapkan teknik tersebut ke dalam model ML dengan library SKLearn.

# #**Tahapan Latihan**
# #####DTahapan pada latihan kali ini adalah sebagai berikut:



# 1. Ubah data menjadi Dataframe.
# 2. Pisahkan atribut dan label
# 3. Latih model SVR
# 4. Buat plot dari model

# #**Codelab**
# #####Dataset yang akan kita gunakan adalah data tentang lama kerja seseorang dan gajinya. Dataset ini dapat diunduh pada [tautan](https://www.kaggle.com/datasets/karthickveerakumar/salary-data-simple-linear-regression) berikut.

# #####Setelah mengunggah dataset yang sudah di-unzip pada Google Colaboratory, pada cell pertama notebook kita impor library dasar yang dibutuhkan. Jangan lupa untuk mengubah berkas csv dari dataset menjadi dataframe Pandas.
# """

import pandas as pd

df = pd.read_csv('Salary_Data.csv')

# df.head()

# """######Selanjutnya kita bisa melihat apakah terdapat missing value pada dataset dengan fungsi .info(). Keluaran dari cell di bawah menunjukkan bahwa tidak ada missing value pada dataset.


# """

df.info()

# """#####Selanjutnya kita tampilkan 5 baris pertama dari dataframe."""

df.head()

# """#####Kemudian kita pisahkan antara atribut dan label yang ingin diprediksi. Ketika hanya terdapat satu atribut pada dataframe, maka atribut tersebut perlu diubah bentuknya agar bisa diterima oleh model dari library SKLearn. Untuk mengubah bentuk atribut kita membutuhkan library numpy."""

import numpy as np

#memisahkan atribut dan label
X = df['YearsExperience']
y = df['Salary']

#mengubah data dalam bentuk atribut

X = np.array(X)
X = X[:, np.newaxis]

# """#####Berikutnya kita buat objek support vector regression dan di sini kita akan mencoba menggunakan parameter *C = 1000*, *gamma = 0.05*, dan kernel *‘rbf’*. Setelah model dibuat kita akan melatih model dengan fungsi fit pada dat"""

from sklearn.svm import SVR

#membangun model dengan parameter C, gamma, dan kernel

model = SVR(C=1000, gamma=0.5, kernel='rbf')

#melatih model dengan fungsi fit
model.fit(X,y)

# """#####Terakhir kita bisa memvisualisasikan bagaimana model SVR kita menyesuaikan terhadap pola yang terdapat pada data menggunakan library matplotlib."""

import matplotlib.pyplot as plt

#memvisualisasikan model
plt.scatter(X,y)
plt.plot(X, model.predict(X))