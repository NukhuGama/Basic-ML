# -*- coding: utf-8 -*-
"""2. SkyLearn_Exer

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ONBfSyi3VPvo27bvHavVkuM7AubpMLNa

#Latihan SKLearn Train Test Split
####Kode program yang akan diajarkan di sini bisa diunduh di tautan berikut ini. Untuk membukanya, upload berkasnya Google Colab
"""

import sklearn
from sklearn import datasets

#load iris dataset
iris = datasets.load_iris()

# pisahkan atribut dan label pada iris dataset
x = iris.data
y = iris.target

# print(x)
# # print(y)

"""#####Untuk membuat train set dan test set kita tinggal memanggil fungsi *train_test_split*. Train_test_split memiliki parameter x yaitu atribut dari dataset, y yaitu target dari dataset, dan test_size yaitu persentase test set dari dataset utuh. Train_test_split mengembalikan 4 nilai yaitu, atribut dari train set, atribut dari test set, target dari train set, dan target dari test set.*italicized text*"""

from sklearn.model_selection import train_test_split

#membagi dataset menjadi training dan testing
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=1)

"""#####Ketika kita print panjang dari x_test, kita bisa melihat bahwa panjang dari atribut test set adalah 30 sampel, sesuai dengan parameter yang kita masukkan pada fungsi train_test_split yaitu 0.2 atau 20% dari 150 sampel. Kode untuk print panjang dari x_test seperti di bawah ini."""

print("The length of Data Testing",len(x_test))
print("The Length of Data Training", len(x_train))

"""######Kita akan membuat model machine learning pertama kita yaitu decision tree, menggunakan library scikit learn. Model machine learning juga sering disebut sebagai classifier. Lebih lanjut, variabel clf adalah singkatan dari classifier."""

from sklearn import tree

#Membuat  model dengan decision tree classifier

clf = tree.DecisionTreeClassifier()

"""#####Setelah dataset dan model siap, kita bisa menggunakan cross validation untuk mengevaluasi performa dari model machine learning. Fungsi cross_val_score() seperti di bawah menerima 4 parameter yaitu, ‘clf’ yang merupakan model machine learning, ‘X’ yang merupakan atribut dari dataset, ‘y’ yang merupakan label dari dataset, dan ‘cv’ yang merupakan jumlah fold yang akan dipakai pada cross validation."""

from sklearn.model_selection import cross_val_score

#Mengevaluasi performa model dengan cross_val_score
scores = cross_val_score(clf, x, y, cv=5)

"""######Cross_val_score mengembalikan nilai berupa larik atau array yang terdiri dari akurasi pengujian setiap fold dari dataset. Untuk mencetak dan mengetahui hasilnya, tambahkan kode scores di bawah kode sebelumnya. Tampilannya seperti gambar di bawah ini."""

scores

"""#####Elemen pertama dari larik menunjukkan nilai 0.96666 yang berarti ketika fold pertama dijadikan validation set dan fold lainnya dijadikan train set, hasil dari pengujian tersebut adalah akurasi sebesar 0.96666.

Melihat akurasi dari seluruh pengujian fold yang memiliki nilai tinggi dan konsisten pada tiap fold, kita mendapatkan gambaran bahwa model kita memiliki performa yang sangat baik.

Secara umum jika hasil dari pengujian tiap fold pada cross validation memiliki nilai yang bervariasi dari 0.85 sampai 0.99, maka model tersebut dapat dikatakan baik.
"""

